# This problem is taken from leetcode which tells whether a number is palindrome or not.

class Solution:
    def isPalindrome(self, x):
        x = str(x)
        x = x + "0"
        z = []
        i=0
        while i != len(x)-1:
            if not x[i].isalnum() and x[i+1].isalnum():
                z.append(int(x[i]+x[i+1]))
                i+=1
            else:
                z.append(int(x[i]))
            i+=1

        if len(z) == 1 and z[0] < 0:
            return False
        else:
            if z[0:] == z[-1::-1]:
                return True
            return False
            
## Edit: The above solution does get accepted by leet code but its not efficient nor correct. It was accepted because of some missing test cases which should have been included in the test cases by now.
## The code written below is more efficient and correct.

class Solution:
    def isPalindrome(self, x):
        original = str(x)
        reversed = x[::-1]
        if orginal == reversed:
            return True
        return False
